<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version> <!--2.1.5.RELEASE-->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.nowcoder.community</groupId>
	<artifactId>community</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>community</name>
	<description>nowcoder community</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--数据库连接-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!--spring mail的相关jar包-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<version>2.1.5.RELEASE</version>
		</dependency>

		<!--commons-lang3-->
		<!--Apache Commons Lang 3 是非常流行的库，包括很多功能齐全的工具类，可以扩展Java的能力。
		其中内容相当丰富，包括字符串、数组以及数值操作，反射和并发，以及几个顺序数据结构实现（pair和triple）。-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>

		<!--kaptcha-->
		<!--一款验证码生成工具，Kaptcha jar包用于随机生成字符和图片，spring没有默认集成，该工具官网文档有点糟糕-->
		<!--github仓库地址：https://github.com/penggle/kaptcha-->
		<!--官网地址：https://code.google.com/archive/p/kaptcha/-->
		<dependency>
			<groupId>com.github.penggle</groupId>
			<artifactId>kaptcha</artifactId>
			<version>2.3.2</version>
		</dependency>

		<!--fastjson-->
		<!--Fastjson is a JSON processor (JSON parser + JSON generator) written in Java-->
		<!--可以把java对象转换为JSON格式，也可以把JSON字符串转换为对象-->
		<!--版本1.2.58存在反序列化漏洞，已经在仓库中被移除-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>2.0.23</version>
		</dependency>

		<!--redis-->
		<!--Spring Boot框架中用于与Redis进行集成的起步依赖。它简化了在Spring Boot应用程序中使用Redis的配置和使用过程。-->
		<!--下面的version可以不用写，Spring Boot 的起步依赖会自动管理依赖项的版本，以确保所选的依赖项与 Spring Boot 版本兼容。-->
		<!--如果有特定的版本要求或需要显式指定依赖项的版本，您可以添加 <version> 元素并指定所需的版本号。在这种情况下，Maven 将会使用您指定的版本。-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<!--<version>2.1.6.RELEASE</version>--> <!--默认是2.1.5.RELEASE-->
		</dependency>

		<!--kafka-->
		<!--Kafka是一种分布式流处理平台，由Apache软件基金会开发和维护。它具有高吞吐量、可扩展性和容错性，被广泛用于构建实时数据流应用程序和数据管道。-->
		<!--自Kafka 2.8版本开始，Kafka已经移除对Zookeeper的依赖，采用自己的内部元数据存储。-->
		<!--omit the version and Boot will automatically bring in the correct version that is compatible with your Boot version-->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<!--<version>2.2.7.RELEASE</version>-->
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
